[PROJECT]
# Name of the project directory. In case it should be renamed, it can be set here...
directory = pattern-recognition-2016


[MNIST]
# This is relativee to the project directory! (modules and submodules have to adjust)
trainingset = ../../mnist/train.csv
testset = ../../mnist/test.csv

[MNIST.sample.size]
# Convenience to accelerate testing with less samples (maxima:  training = 40'000 and testing = 15'001)
training = 40000
testing = 15001


[KWS]
root = ../PatRec16_KWS_Data
task = ../PatRec16_KWS_Data
images = ../PatRec16_KWS_Data/images
transcription = ../PatRec16_KWS_Data/ground-truth/transcription.txt
locations = ../PatRec16_KWS_Data/ground-truth/locations
training = ../PatRec16_KWS_Data/task/train.txt
testing = ../PatRec16_KWS_Data/task/valid.txt
search = ../PatRec16_KWS_Data/task/keywords.txt

[KWS.prepro]
# Relative peak height of the central part of the word vertical projection
relative_height = 0.66
# Angular resolution for the skew correction
angular_resolution = 0.2
# Fixed threshold [0...1] for word segmentation (if empty otsu is used)
segmentation_threshold = 0.3
# Approximate width of the central/primary peak of the vertical projection (e.g. lower case letters like a, i, u, ...)
primary_peak_height = 24
# Approximate width of the secondairy peaks of the vertical projection.
secondary_peak_height = 13

[KWS.features]
# Width of the sliding window
window_width = 1
# Step size (from one window to the next)
step_size = 3
# File with the computed features
file = ip/feature-map.txt

[KWS.classifier]
# Number of nearest neighbors for KNN classifier
k = 3
# Tolerance on the difference of image dimensions (to constrain the distance computation)
tol_hor = 300
tol_ver = 30
# Output file
file = search/classification.log

[KWS.search]
css = search/css/style.css
js = search/js/main.js

[Plots]
directory = plots


[Classifiers]
directory = clfs


[SVM]
# Kernels to be tested in test_svm
# Posibilities: linear, poly [deg.], rbf, sigmoid
kernels = linear,poly 3,poly 4
